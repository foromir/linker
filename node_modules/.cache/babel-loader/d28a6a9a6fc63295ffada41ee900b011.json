{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailkalugin/Documents/link/link/src/components/DropDown.js\";\nimport useComponentVisible from \"../hooks/useComponentVisible\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst DropDown = ({\n  handleselect,\n  url\n}) => {\n  const {\n    ref,\n    isComponentVisible,\n    setIsComponentVisible\n  } = useComponentVisible(false);\n  useEffect(() => {\n    // top: computeTopWith(this.refs.child),\n    // left: computeLeftWith(this.refs.child)\n    ReactDOM.findDOMNode();\n    console.log('parentNode', ReactDOM.findDOMNode());\n  }, []);\n  return React.createElement(\"div\", {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"dpowDown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: () => setIsComponentVisible(true),\n    className: isComponentVisible ? \"icon_info active\" : \"icon_info\",\n    src: \"/images/right-arrow.svg\",\n    alt: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), isComponentVisible && React.createElement(\"div\", {\n    className: \"dpowDown_content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(CopyToClipboard, {\n    text: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dpowDown_item\",\n    onClick: () => {\n      setIsComponentVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/images/link.svg\",\n    alt: \"link\",\n    className: \"dpowDown_item_icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \"Copy Link\")), React.createElement(\"div\", {\n    className: \"dpowDown_item\",\n    onClick: () => {\n      handleselect(\"fb\");\n      setIsComponentVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/images/facebook.svg\",\n    alt: \"link\",\n    className: \"dpowDown_item_icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \"Facebook\"), React.createElement(\"div\", {\n    className: \"dpowDown_item\",\n    onClick: () => {\n      handleselect(\"tw\");\n      setIsComponentVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/images/twitter.svg\",\n    alt: \"link\",\n    className: \"dpowDown_item_icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \"Twitter\"), React.createElement(\"div\", {\n    className: \"dpowDown_item\",\n    onClick: () => {\n      handleselect(\"ln\");\n      setIsComponentVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/images/linkedin.svg\",\n    alt: \"link\",\n    className: \"dpowDown_item_icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \"Linkedin\"))));\n};\n\nexport default DropDown;","map":{"version":3,"sources":["/Users/mikhailkalugin/Documents/link/link/src/components/DropDown.js"],"names":["useComponentVisible","React","useEffect","ReactDOM","CopyToClipboard","DropDown","handleselect","url","ref","isComponentVisible","setIsComponentVisible","findDOMNode","console","log"],"mappings":"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","sourcesContent":["import useComponentVisible from \"../hooks/useComponentVisible\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst DropDown = ({ handleselect, url }) => {\n  const {\n    ref,\n    isComponentVisible,\n    setIsComponentVisible\n  } = useComponentVisible(false);\n\n  useEffect(() => {\n    // top: computeTopWith(this.refs.child),\n    // left: computeLeftWith(this.refs.child)\n    ReactDOM.findDOMNode()\n    console.log('parentNode',ReactDOM.findDOMNode())\n  },[])\n  return (\n    <div ref={ref}>\n      <span className=\"dpowDown\">\n        <img\n          onClick={() => setIsComponentVisible(true)}\n          className={isComponentVisible ? \"icon_info active\" : \"icon_info\"}\n          src=\"/images/right-arrow.svg\"\n          alt=\"info\"\n        />\n        {isComponentVisible && (\n          <div className=\"dpowDown_content\">\n            <CopyToClipboard text={url}>\n              <div\n                className=\"dpowDown_item\"\n                onClick={() => {\n                  setIsComponentVisible(false);\n                }}\n              >\n                <img\n                  src=\"/images/link.svg\"\n                  alt=\"link\"\n                  className=\"dpowDown_item_icon\"\n                />\n                Copy Link\n              </div>\n            </CopyToClipboard>\n            <div\n              className=\"dpowDown_item\"\n              onClick={() => {\n                handleselect(\"fb\");\n                setIsComponentVisible(false);\n              }}\n            >\n              <img\n                src=\"/images/facebook.svg\"\n                alt=\"link\"\n                className=\"dpowDown_item_icon\"\n              />\n              Facebook\n            </div>\n            <div\n              className=\"dpowDown_item\"\n              onClick={() => {\n                handleselect(\"tw\");\n                setIsComponentVisible(false);\n              }}\n            >\n              <img\n                src=\"/images/twitter.svg\"\n                alt=\"link\"\n                className=\"dpowDown_item_icon\"\n              />\n              Twitter\n            </div>\n            <div\n              className=\"dpowDown_item\"\n              onClick={() => {\n                handleselect(\"ln\");\n                setIsComponentVisible(false);\n              }}\n            >\n              <img\n                src=\"/images/linkedin.svg\"\n                alt=\"link\"\n                className=\"dpowDown_item_icon\"\n              />\n              Linkedin\n            </div>\n          </div>\n        )}\n      </span>\n    </div>\n  );\n};\n\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}
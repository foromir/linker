{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailkalugin/Documents/link/link/src/components/EnterUrl.js\";\nimport React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\"; // Components\n\nimport Modal from \"./Modal\";\nimport Subscriptions from \"./Subscriptions\";\n\nconst EnterUrl = ({\n  handleSubmit,\n  isDashboard,\n  modelOpen\n}) => {\n  const [url, setUrl] = useState(\"\");\n  const [confirmUrl, setConfirmUrl] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [keyword, setKeyword] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isOpenMadal, setIsOpenMadal] = useState(false);\n\n  const checkUrl = url => {\n    // eslint-disable-next-line\n    const result = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/.test(url);\n    result && url.length ? setConfirmUrl(true) : setConfirmUrl(false);\n  };\n\n  const checkKeywordDescription = () => {\n    if (confirmUrl && keyword) {\n      setAlert(true);\n\n      if (isDashboard) {\n        handleSubmit({\n          url,\n          keyword,\n          description\n        });\n        setUrl(\"\");\n        setConfirmUrl(false);\n        setKeyword(\"\");\n        setDescription(\"\");\n        setIsOpenMadal(true);\n      }\n    } else {\n      setAlert(false);\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"enterUrl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"enterUrl_wrapInputs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Enter Original URL...\",\n    className: \"input-default \",\n    value: url,\n    onChange: e => {\n      setUrl(e.target.value);\n      checkUrl(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), confirmUrl && React.createElement(\"div\", {\n    className: \"enterUrl_wrapActionInputs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Enter Keyword...\",\n    className: \"input-default \",\n    value: keyword,\n    onChange: e => setKeyword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Enter Description...\",\n    className: \"input-default \",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"btn default\",\n    disabled: !confirmUrl,\n    onClick: confirmUrl ? checkKeywordDescription : checkUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Shorten URL\")), alert && !isDashboard && React.createElement(\"div\", {\n    className: \"enterUrl_alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Congratulations, this keyword is available. Please\", \" \", React.createElement(\"a\", {\n    onClick: () => modelOpen('Login'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Login\"), \" /\", \" \", React.createElement(\"a\", {\n    onClick: () => modelOpen('Register'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Register\")), React.createElement(Modal, {\n    open: isOpenMadal,\n    close: () => setIsOpenMadal(false),\n    customClass: \"SubscriptionsModal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Subscriptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })));\n};\n\nEnterUrl.propTypes = {\n  handleSubmit: PropTypes.func,\n  modelOpen: PropTypes.func,\n  isDashboard: PropTypes.bool\n};\nexport default EnterUrl;","map":{"version":3,"sources":["/Users/mikhailkalugin/Documents/link/link/src/components/EnterUrl.js"],"names":["React","Fragment","useState","PropTypes","Modal","Subscriptions","EnterUrl","handleSubmit","isDashboard","modelOpen","url","setUrl","confirmUrl","setConfirmUrl","alert","setAlert","keyword","setKeyword","description","setDescription","isOpenMadal","setIsOpenMadal","checkUrl","result","test","length","checkKeywordDescription","e","target","value","propTypes","func","bool"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport Modal from \"./Modal\";\nimport Subscriptions from \"./Subscriptions\";\n\nconst EnterUrl = ({ handleSubmit, isDashboard, modelOpen }) => {\n  const [url, setUrl] = useState(\"\");\n  const [confirmUrl, setConfirmUrl] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [keyword, setKeyword] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isOpenMadal, setIsOpenMadal] = useState(false);\n\n  const checkUrl = url => {\n    // eslint-disable-next-line\n    const result = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/.test(\n      url\n    );\n    result && url.length ? setConfirmUrl(true) : setConfirmUrl(false);\n  };\n\n  const checkKeywordDescription = () => {\n    if (confirmUrl && keyword) {\n      setAlert(true);\n      if(isDashboard) {\n        handleSubmit({\n          url,\n          keyword,\n          description\n        });\n        setUrl(\"\")\n        setConfirmUrl(false)\n        setKeyword(\"\")\n        setDescription(\"\")\n\n        setIsOpenMadal(true);\n\n      }\n    } else {\n      setAlert(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"enterUrl\">\n        <div className=\"enterUrl_wrapInputs\">\n          <input\n            placeholder=\"Enter Original URL...\"\n            className=\"input-default \"\n            value={url}\n            onChange={e => {\n              setUrl(e.target.value);\n              checkUrl(e.target.value);\n            }}\n          />\n          {confirmUrl && (\n            <div className=\"enterUrl_wrapActionInputs\">\n              <input\n                placeholder=\"Enter Keyword...\"\n                className=\"input-default \"\n                value={keyword}\n                onChange={e => setKeyword(e.target.value)}\n              />\n              <input\n                placeholder=\"Enter Description...\"\n                className=\"input-default \"\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              />\n            </div>\n          )}\n        </div>\n        <button\n          className=\"btn default\"\n          disabled={!confirmUrl}\n          onClick={confirmUrl ? checkKeywordDescription : checkUrl}\n        >\n          Shorten URL\n        </button>\n      </div>\n      {alert && !isDashboard && (\n        <div className=\"enterUrl_alert\">\n          Congratulations, this keyword is available. Please{\" \"}\n          {/* eslint-disable-next-line */}\n          <a onClick={()=>modelOpen('Login')}>Login</a> /{\" \"}\n          {/* eslint-disable-next-line */}\n          <a onClick={()=>modelOpen('Register')}>Register</a>\n        </div>\n      )}\n\n      {/* Modals */}\n      <Modal\n        open={isOpenMadal}\n        close={() => setIsOpenMadal(false)}\n        customClass={\"SubscriptionsModal\"}\n      >\n          <Subscriptions />\n      </Modal>\n    </Fragment>\n  );\n};\n\nEnterUrl.propTypes = {\n  handleSubmit: PropTypes.func,\n  modelOpen: PropTypes.func,\n  isDashboard: PropTypes.bool\n};\n\nexport default EnterUrl;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailkalugin/Documents/link/link/src/components/Table/index.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; // Components\n\nimport Checkbox from \"../Checkbox\";\nimport DropDown from \"../DropDown\";\nimport Modal from \"../Modal\";\nimport EditModal from \"./EditModal\";\nimport Subscriptions from \"../Subscriptions\"; // Actions\n\nimport { handleSubmitUrl, removeTableItem, handleselect, handleChecked, removeTableItems, handleEditDescription, handleEditUrl, removeClickTableItem, changeExpiredTableItem } from \"../../actions/dashboard\";\nexport const Table = ({\n  table,\n  removeTableItem,\n  removeTableItems,\n  handleselect,\n  handleChecked,\n  handleEditDescription,\n  handleEditUrl,\n  removeClickTableItem,\n  changeExpiredTableItem\n}) => {\n  const [isChecked, setIsChecked] = useState(false);\n  const [checkedKeywords, setCheckedKeywords] = useState(false);\n  const [isOpenMadal, setIsOpenMadal] = useState(false);\n  const [typeMadal, setTypeMadal] = useState(\"\");\n  const [editItem, setEditItem] = useState(\"\");\n  useEffect(() => {\n    window.localStorage.setItem(\"subscriptionsModal\", true);\n    const SubscriptionsModal = window.localStorage.getItem(\"subscriptionsModal\");\n\n    if (!SubscriptionsModal) {\n      setTypeMadal(\"SubscriptionsModal\");\n      setIsOpenMadal(true);\n    }\n  }, []);\n  useEffect(() => {\n    const checked = table.filter(elem => elem.checked);\n    const keywords = checked.map(elem => elem.keyword);\n    setCheckedKeywords(keywords.join(\", \"));\n    setIsChecked(checked.length);\n  }, [table, handleChecked]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tbl_header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Your Links\"), React.createElement(\"div\", {\n    className: \"tbl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell cell_icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, isChecked ? React.createElement(\"img\", {\n    onClick: () => {\n      setIsOpenMadal(true);\n      setTypeMadal(\"DeleteModalMulti\");\n    } // onClick={removeTableItems}\n    ,\n    className: \"icon_delete\",\n    src: \"/images/delete.svg\",\n    alt: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }) : \"\"), React.createElement(\"div\", {\n    className: \"cell cell_header cell_link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Original URL\"), React.createElement(\"div\", {\n    className: \"cell cell_header cell_keywords\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Keyword\", React.createElement(\"div\", {\n    className: \"tooltip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, elem.url)), React.createElement(\"div\", {\n    className: \"cell cell_header cell_expiration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Expiration \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"CET\")), React.createElement(\"div\", {\n    className: \"cell cell_header cell_click\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Clicks\")), table.map(elem => {\n    if (elem.active) {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        key: elem.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cell cell_icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: elem.checked,\n        handleChecked: checked => handleChecked({\n          id: elem.id,\n          checked\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cell cell_link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap_link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, elem.url), React.createElement(\"img\", {\n        className: \"icon_info\",\n        src: \"/images/info.svg\",\n        alt: \"info\",\n        onClick: () => {\n          setEditItem(elem);\n          setIsOpenMadal(true);\n          setTypeMadal(\"EditDescriptionModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"icon_edit\",\n        src: \"/images/edit.svg\",\n        alt: \"edit\",\n        onClick: () => {\n          setEditItem(elem);\n          setIsOpenMadal(true);\n          setTypeMadal(\"EditUrlModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cell cell_keywords\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, elem.keyword), React.createElement(\"div\", {\n        className: \"cell cell_expiration\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, elem.expiration), React.createElement(\"div\", {\n        className: \"cell cell_click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, elem.clicks ? React.createElement(\"div\", {\n        className: \"text_hover\",\n        onClick: () => {\n          setEditItem(elem);\n          setIsOpenMadal(true);\n          setTypeMadal(\"ClickModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, elem.clicks) : elem.clicks, React.createElement(\"span\", {\n        className: \"cell_wrapIcons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(DropDown, {\n        handleselect: handleselect,\n        url: elem.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"icon_edit\",\n        src: \"/images/delete.svg\",\n        alt: \"edit\",\n        onClick: () => {\n          setEditItem(elem);\n          setIsOpenMadal(true);\n          setTypeMadal(\"DeleteModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"row expired\",\n        key: elem.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cell cell_icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: elem.checked,\n        handleChecked: checked => handleChecked({\n          id: elem.id,\n          checked\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cell cell_link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap_link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, elem.url), React.createElement(\"img\", {\n        className: \"icon_info\",\n        src: \"/images/info.svg\",\n        alt: \"info\",\n        onClick: () => {\n          setEditItem(elem);\n          setIsOpenMadal(true);\n          setTypeMadal(\"EditDescriptionModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"icon_edit\",\n        src: \"/images/edit.svg\",\n        alt: \"edit\",\n        onClick: () => {\n          setEditItem(elem);\n          setIsOpenMadal(true);\n          setTypeMadal(\"EditUrlModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cell cell_keywords\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, elem.keyword), React.createElement(\"div\", {\n        className: \"cell cell_expiration text_hover\",\n        onClick: () => {\n          setEditItem(elem);\n          setIsOpenMadal(true);\n          setTypeMadal(\"ExpiredModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, elem.expiration), React.createElement(\"div\", {\n        className: \"cell cell_click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, elem.clicks ? React.createElement(\"div\", {\n        className: \"text_hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, elem.clicks) : elem.clicks, React.createElement(\"span\", {\n        className: \"cell_wrapIcons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"icon_edit\",\n        src: \"/images/exclamation-sign.svg\",\n        alt: \"edit\",\n        onClick: () => {\n          setEditItem(elem);\n          setIsOpenMadal(true);\n          setTypeMadal(\"ExpiredModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"icon_edit\",\n        src: \"/images/delete.svg\",\n        alt: \"edit\",\n        onClick: () => {\n          setEditItem(elem);\n          setIsOpenMadal(true);\n          setTypeMadal(\"DeleteModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }))));\n    }\n  })), React.createElement(Modal, {\n    open: isOpenMadal,\n    close: () => setIsOpenMadal(false),\n    customClass: typeMadal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, typeMadal === \"EditDescriptionModal\" && React.createElement(EditModal, {\n    close: () => setIsOpenMadal(false),\n    handleSubmit: handleEditDescription,\n    editItemId: editItem.id,\n    editItemValue: editItem.description,\n    text: \"Link Description\",\n    placeholder: \"Enter description...\",\n    inputName: \"description\",\n    buttonText: \"Save Changes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }), typeMadal === \"EditUrlModal\" && React.createElement(EditModal, {\n    close: () => setIsOpenMadal(false),\n    handleSubmit: handleEditUrl,\n    editItemId: editItem.id,\n    editItemValue: editItem.url,\n    text: \"Original URL\",\n    placeholder: \"Enter url...\",\n    inputName: \"url\",\n    buttonText: \"Save Changes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), typeMadal === \"DeleteModal\" && React.createElement(EditModal, {\n    close: () => setIsOpenMadal(false),\n    handleSubmit: removeTableItem,\n    editItemId: editItem.id,\n    description: `Are you sure you want to permanently delete ${editItem.keyword} ?`,\n    text: \"Delete Link\",\n    buttonText: \"Confirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }), typeMadal === \"DeleteModalMulti\" && React.createElement(EditModal, {\n    close: () => setIsOpenMadal(false),\n    handleSubmit: removeTableItems,\n    description: `Are you sure you want to permanently delete ${checkedKeywords} ?`,\n    text: \"Delete Links\",\n    buttonText: \"Confirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }), typeMadal === \"ClickModal\" && React.createElement(EditModal, {\n    close: () => setIsOpenMadal(false),\n    handleSubmit: removeClickTableItem,\n    editItemId: editItem.id,\n    description: \"Reset clicks to 0\",\n    text: \"Clicks correction\",\n    buttonText: \"Confirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }), typeMadal === \"ExpiredModal\" && React.createElement(EditModal, {\n    expiredModal: true,\n    description: \"Start a new subscription for this link?\",\n    close: () => setIsOpenMadal(false),\n    handleSubmit: ({\n      id,\n      value\n    }) => {\n      changeExpiredTableItem({\n        id,\n        value\n      });\n      setTimeout(() => {\n        setTypeMadal(\"SubscriptionsModal\");\n        setIsOpenMadal(true);\n      }, 500);\n    },\n    editItemId: editItem.id,\n    text: \"Expired Link\",\n    buttonText: \"Yes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }), typeMadal === \"SubscriptionsModal\" && React.createElement(Subscriptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  })));\n};\nTable.propTypes = {\n  table: PropTypes.array,\n  removeTableItem: PropTypes.func,\n  handleselect: PropTypes.func,\n  removeTableItems: PropTypes.func,\n  handleEditDescription: PropTypes.func,\n  handleChecked: PropTypes.func,\n  handleEditUrl: PropTypes.func,\n  removeClickTableItem: PropTypes.func,\n  changeExpiredTableItem: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  table: state.table.table\n});\n\nconst mapDispatchToProps = {\n  handleSubmitUrl,\n  removeTableItem,\n  handleselect,\n  removeTableItems,\n  handleChecked,\n  handleEditDescription,\n  handleEditUrl,\n  removeClickTableItem,\n  changeExpiredTableItem\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/Users/mikhailkalugin/Documents/link/link/src/components/Table/index.js"],"names":["React","Fragment","useEffect","useState","PropTypes","connect","Checkbox","DropDown","Modal","EditModal","Subscriptions","handleSubmitUrl","removeTableItem","handleselect","handleChecked","removeTableItems","handleEditDescription","handleEditUrl","removeClickTableItem","changeExpiredTableItem","Table","table","isChecked","setIsChecked","checkedKeywords","setCheckedKeywords","isOpenMadal","setIsOpenMadal","typeMadal","setTypeMadal","editItem","setEditItem","window","localStorage","setItem","SubscriptionsModal","getItem","checked","filter","elem","keywords","map","keyword","join","length","url","active","id","expiration","clicks","description","value","setTimeout","propTypes","array","func","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n// Components\nimport Checkbox from \"../Checkbox\";\nimport DropDown from \"../DropDown\";\nimport Modal from \"../Modal\";\nimport EditModal from \"./EditModal\";\nimport Subscriptions from \"../Subscriptions\";\n\n// Actions\nimport {\n  handleSubmitUrl,\n  removeTableItem,\n  handleselect,\n  handleChecked,\n  removeTableItems,\n  handleEditDescription,\n  handleEditUrl,\n  removeClickTableItem,\n  changeExpiredTableItem\n} from \"../../actions/dashboard\";\n\nexport const Table = ({\n  table,\n  removeTableItem,\n  removeTableItems,\n  handleselect,\n  handleChecked,\n  handleEditDescription,\n  handleEditUrl,\n  removeClickTableItem,\n  changeExpiredTableItem\n}) => {\n  const [isChecked, setIsChecked] = useState(false);\n  const [checkedKeywords, setCheckedKeywords] = useState(false);\n  const [isOpenMadal, setIsOpenMadal] = useState(false);\n  const [typeMadal, setTypeMadal] = useState(\"\");\n  const [editItem, setEditItem] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"subscriptionsModal\", true);\n    const SubscriptionsModal = window.localStorage.getItem(\n      \"subscriptionsModal\"\n    );\n\n    if (!SubscriptionsModal) {\n      setTypeMadal(\"SubscriptionsModal\");\n      setIsOpenMadal(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    const checked = table.filter(elem => elem.checked);\n    const keywords = checked.map(elem => elem.keyword);\n    setCheckedKeywords(keywords.join(\", \"));\n    setIsChecked(checked.length);\n  }, [table, handleChecked]);\n\n  return (\n    <Fragment>\n      <div className=\"tbl_header\">Your Links</div>\n      <div className=\"tbl\">\n        <div className=\"row\">\n          <div className=\"cell cell_icon\">\n            {isChecked ? (\n              <img\n                onClick={() => {\n                  setIsOpenMadal(true);\n                  setTypeMadal(\"DeleteModalMulti\");\n                }}\n                // onClick={removeTableItems}\n                className=\"icon_delete\"\n                src=\"/images/delete.svg\"\n                alt=\"delete\"\n              />\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"cell cell_header cell_link\">Original URL</div>\n          <div className=\"cell cell_header cell_keywords\">\n            Keyword\n            <div className=\"tooltip\">{elem.url}</div>\n          </div>\n          <div className=\"cell cell_header cell_expiration\">\n            Expiration <span>CET</span>\n          </div>\n          <div className=\"cell cell_header cell_click\">Clicks</div>\n        </div>\n        {table.map(elem => {\n          if (elem.active) {\n            return (\n              <div className=\"row\" key={elem.id}>\n                <div className=\"cell cell_icon\">\n                  <Checkbox\n                    checked={elem.checked}\n                    handleChecked={checked =>\n                      handleChecked({ id: elem.id, checked })\n                    }\n                  />\n                </div>\n                <div className=\"cell cell_link\">\n                  <div className=\"wrap_link\">{elem.url}</div>\n                  <img\n                    className=\"icon_info\"\n                    src=\"/images/info.svg\"\n                    alt=\"info\"\n                    onClick={() => {\n                      setEditItem(elem);\n                      setIsOpenMadal(true);\n                      setTypeMadal(\"EditDescriptionModal\");\n                    }}\n                  />\n                  <img\n                    className=\"icon_edit\"\n                    src=\"/images/edit.svg\"\n                    alt=\"edit\"\n                    onClick={() => {\n                      setEditItem(elem);\n                      setIsOpenMadal(true);\n                      setTypeMadal(\"EditUrlModal\");\n                    }}\n                  />\n                </div>\n                <div className=\"cell cell_keywords\">{elem.keyword}</div>\n                <div className=\"cell cell_expiration\">{elem.expiration}</div>\n                <div className=\"cell cell_click\">\n                  {elem.clicks ? (\n                    <div\n                      className=\"text_hover\"\n                      onClick={() => {\n                        setEditItem(elem);\n                        setIsOpenMadal(true);\n                        setTypeMadal(\"ClickModal\");\n                      }}\n                    >\n                      {elem.clicks}\n                    </div>\n                  ) : (\n                    elem.clicks\n                  )}\n                  <span className=\"cell_wrapIcons\">\n                    <DropDown handleselect={handleselect} url={elem.url} />\n                    <img\n                      className=\"icon_edit\"\n                      src=\"/images/delete.svg\"\n                      alt=\"edit\"\n                      onClick={() => {\n                        setEditItem(elem);\n                        setIsOpenMadal(true);\n                        setTypeMadal(\"DeleteModal\");\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"row expired\" key={elem.id}>\n                <div className=\"cell cell_icon\">\n                  <Checkbox\n                    checked={elem.checked}\n                    handleChecked={checked =>\n                      handleChecked({ id: elem.id, checked })\n                    }\n                  />\n                </div>\n                <div className=\"cell cell_link\">\n                  <div className=\"wrap_link\">{elem.url}</div>\n                  <img\n                    className=\"icon_info\"\n                    src=\"/images/info.svg\"\n                    alt=\"info\"\n                    onClick={() => {\n                      setEditItem(elem);\n                      setIsOpenMadal(true);\n                      setTypeMadal(\"EditDescriptionModal\");\n                    }}\n                  />\n                  <img\n                    className=\"icon_edit\"\n                    src=\"/images/edit.svg\"\n                    alt=\"edit\"\n                    onClick={() => {\n                      setEditItem(elem);\n                      setIsOpenMadal(true);\n                      setTypeMadal(\"EditUrlModal\");\n                    }}\n                  />\n                </div>\n                <div className=\"cell cell_keywords\">{elem.keyword}</div>\n                <div\n                  className=\"cell cell_expiration text_hover\"\n                  onClick={() => {\n                    setEditItem(elem);\n                    setIsOpenMadal(true);\n                    setTypeMadal(\"ExpiredModal\");\n                  }}\n                >\n                  {elem.expiration}\n                </div>\n                <div className=\"cell cell_click\">\n                  {elem.clicks ? (\n                    <div className=\"text_hover\">{elem.clicks}</div>\n                  ) : (\n                    elem.clicks\n                  )}\n                  <span className=\"cell_wrapIcons\">\n                    <img\n                      className=\"icon_edit\"\n                      src=\"/images/exclamation-sign.svg\"\n                      alt=\"edit\"\n                      onClick={() => {\n                        setEditItem(elem);\n                        setIsOpenMadal(true);\n                        setTypeMadal(\"ExpiredModal\");\n                      }}\n                    />\n                    <img\n                      className=\"icon_edit\"\n                      src=\"/images/delete.svg\"\n                      alt=\"edit\"\n                      onClick={() => {\n                        setEditItem(elem);\n                        setIsOpenMadal(true);\n                        setTypeMadal(\"DeleteModal\");\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div>\n\n      {/* Modals */}\n      <Modal\n        open={isOpenMadal}\n        close={() => setIsOpenMadal(false)}\n        customClass={typeMadal}\n      >\n        {typeMadal === \"EditDescriptionModal\" && (\n          <EditModal\n            close={() => setIsOpenMadal(false)}\n            handleSubmit={handleEditDescription}\n            editItemId={editItem.id}\n            editItemValue={editItem.description}\n            text=\"Link Description\"\n            placeholder=\"Enter description...\"\n            inputName=\"description\"\n            buttonText=\"Save Changes\"\n          />\n        )}\n        {typeMadal === \"EditUrlModal\" && (\n          <EditModal\n            close={() => setIsOpenMadal(false)}\n            handleSubmit={handleEditUrl}\n            editItemId={editItem.id}\n            editItemValue={editItem.url}\n            text=\"Original URL\"\n            placeholder=\"Enter url...\"\n            inputName=\"url\"\n            buttonText=\"Save Changes\"\n          />\n        )}\n        {typeMadal === \"DeleteModal\" && (\n          <EditModal\n            close={() => setIsOpenMadal(false)}\n            handleSubmit={removeTableItem}\n            editItemId={editItem.id}\n            description={`Are you sure you want to permanently delete ${editItem.keyword} ?`}\n            text=\"Delete Link\"\n            buttonText=\"Confirm\"\n          />\n        )}\n        {typeMadal === \"DeleteModalMulti\" && (\n          <EditModal\n            close={() => setIsOpenMadal(false)}\n            handleSubmit={removeTableItems}\n            description={`Are you sure you want to permanently delete ${checkedKeywords} ?`}\n            text=\"Delete Links\"\n            buttonText=\"Confirm\"\n          />\n        )}\n        {typeMadal === \"ClickModal\" && (\n          <EditModal\n            close={() => setIsOpenMadal(false)}\n            handleSubmit={removeClickTableItem}\n            editItemId={editItem.id}\n            description=\"Reset clicks to 0\"\n            text=\"Clicks correction\"\n            buttonText=\"Confirm\"\n          />\n        )}\n        {typeMadal === \"ExpiredModal\" && (\n          <EditModal\n            expiredModal\n            description=\"Start a new subscription for this link?\"\n            close={() => setIsOpenMadal(false)}\n            handleSubmit={({ id, value }) => {\n              changeExpiredTableItem({ id, value });\n              setTimeout(() => {\n                setTypeMadal(\"SubscriptionsModal\");\n                setIsOpenMadal(true);\n              }, 500);\n            }}\n            editItemId={editItem.id}\n            text=\"Expired Link\"\n            buttonText=\"Yes\"\n          />\n        )}\n\n        {typeMadal === \"SubscriptionsModal\" && <Subscriptions />}\n      </Modal>\n\n      {/* Modals end */}\n    </Fragment>\n  );\n};\n\nTable.propTypes = {\n  table: PropTypes.array,\n  removeTableItem: PropTypes.func,\n  handleselect: PropTypes.func,\n  removeTableItems: PropTypes.func,\n  handleEditDescription: PropTypes.func,\n  handleChecked: PropTypes.func,\n  handleEditUrl: PropTypes.func,\n  removeClickTableItem: PropTypes.func,\n  changeExpiredTableItem: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  table: state.table.table\n});\n\nconst mapDispatchToProps = {\n  handleSubmitUrl,\n  removeTableItem,\n  handleselect,\n  removeTableItems,\n  handleChecked,\n  handleEditDescription,\n  handleEditUrl,\n  removeClickTableItem,\n  changeExpiredTableItem\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}